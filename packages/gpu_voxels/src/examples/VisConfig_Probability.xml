<?xml version="1.0" encoding="UTF-8"?>

<!--
  If the color is not specified by a word, the RGBA-values will be used instead.
  The RGBA-values should be between 0 and 1.
  Currently supported colors are: black, white, red, green, blue, gray, yellow, cyan, magenta
  To get a darker version of the color add "dark" infront of the name
  (e.g. dark blue), that doesn't work with black or white.
-->

<visualizer_context>
<background>
  black
</background>

<!-- ------------- The parameter for the voxel map 0------ -->
<myProbVoxelMap>
  <!-- only voxels with an occupancy >= occupancy_threshold will be drawn. Has to be in the range of 1 to 255 -->
  <occupancy_threshold> -127 </occupancy_threshold>

  <type_0>
    <color_1> green     </color_1>
    <color_2> dark blue </color_2>

  </type_0>
</myProbVoxelMap>


<!-- --------------- The parameter for camera------------ -->
<camera>
  <!-- Free flight mode -->
  <position>
    <x> 144.895 </x>
    <y> 76.9175 </y>
    <z> 113.541 </z>
  </position>
  <horizontal_angle> 273.988 </horizontal_angle> <!-- given in Deg -->
  <vertical_angle> -23.835 </vertical_angle> <!-- given in Deg -->
  <field_of_view> 60 </field_of_view> <!-- given in Deg -->
  <!-- Orbit mode -->
  <focus>
    <x> 50 </x>
    <y> 0 </y>
    <z> 50 </z>
  </focus>
  <window_width> 1024 </window_width>
  <window_height> 768 </window_height>
</camera>


<!-- --------------- some miscellaneous parameter------------ -->
<miscellaneous>
  <interpolation_repeat> 500 </interpolation_repeat>   <!-- interpolation color repeats after x voxels -->
  <min_view_dim> 200 </min_view_dim>
  <min_xyz_value>   <!--minimal x,y,z value that will be drawn. Input will be treated as unsigned integer-->
    <x> 0 </x>
    <y> 0 </y>
    <z> 0 </z>
  </min_xyz_value>
  <max_xyz_value>    <!--exclusive upper x,y,z boundary. Input will be treated as unsigned integer-->
    <x> -1 </x>
    <y> -1 </y>
    <z> -1 </z>
  </max_xyz_value>
  <max_memory_usage> 0 </max_memory_usage>  <!--In MByte, 0 <=> no limit -->
  <max_fps> 60 </max_fps>  <!--0 <=> no limit -->
  <draw_edges_of_triangles> true </draw_edges_of_triangles>
  <draw_filled_triangles> true </draw_filled_triangles>
  <draw_whole_map> true </draw_whole_map> <!-- disables the view cutting -->
  <grid_distance> 25 </grid_distance> <!-- the distance between two grid lines -->
  <grid_height> 0 </grid_height> <!-- the height where the grid will be drawn -->
  <grid_max_x> 500 </grid_max_x> <!-- the x dimension of the grid -->
  <grid_max_y> 500 </grid_max_y> <!-- the y dimension of the grid -->
  <grid_color> blue </grid_color>
  <unit_scale> 1 cm </unit_scale>
</miscellaneous>

<!-- --------------- the parameters for the cubeoid of the primitive list------------ -->
<defaultCuboid>
  cyan
  <position>
    <x> 0 </x>
    <y> 0 </y>
    <z> 0 </z>
  </position>
  <side_length>
    <x> 1 </x>
    <y> 1 </y>
    <z> 1 </z>
  </side_length>
</defaultCuboid>

<!-- --------------- example to insert one cuboid/sphere into the szene------------ -->
<!--
    <cuboid>
    cyan
    <position>
    <x> 0 </x>
    <y> 20 </y>
    <z> 0 </z>
    </position>
    <side_length>
    <x> -100 </x>
    <y> 20 </y>
    <z> 1 </z>
    </side_length>
    </cuboid>
-->

</visualizer_context>
